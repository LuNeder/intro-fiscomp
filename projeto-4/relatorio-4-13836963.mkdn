# Projeto 3
<!-- Compilar com: pandoc ./relatorio-4-13836963.mkdn --pdf-engine=lualatex -f markdown-implicit_figures -o ./relatorio-4-13836963.pdf -->


## Tarefa A

O código abaixo calcula o problema do pêndulo pelo método de Euler, no entanto - como pede o enunciado - está errado.

````fortran
       implicit real*8 (a-h, o-z)
       g = 9.8d0
       al = 9.8d0
       am = 1.0d0

       tmax = 80.0d0
       t = 0.0d0
       dt = 0.01d0

       pi = 4.0d0*datan(1.0d0)
       omega = 0.0d0
       theta = pi/6.0d0
       

       open(unit=7, file="theta")
       open(unit=9, file="energia")

       do while (t.lt.tmax)
         t = t + dt
         thetz = theta
         theta = theta + (omega * dt)
         omega = omega - ((g/al)*thetz*dt)
         e =  al * am * ((((omega**2)*al)/2.0d0) + (g*(1-dcos(theta))))

         write(9,*) t, e

         if(abs(theta).ge.2.0d0*pi) then
           write(7,*) t,mod(theta,2.0d0*pi)
         else
           write(7,*) t,theta
         end if


       end do

       close(9)
       close(7)
       
       end
       
````

Como podemos ver, o resultado do theta e da energia (respectivamente) não fazem sentido - a energia está aumentando:

![theta](fotos/thetaA.png)

![energia](fotos/energiaA.png)


Para corrigir o problema, se deve fazer uma pequena alteração no código (abaixo representada por uma [diff](https://en.wikipedia.org/wiki/Diff), por simplicidade) para utilizar o Euler-Cromer:

````diff
15,16c15,16
<        open(unit=7, file="theta")
<        open(unit=9, file="energia")
---
>        open(unit=7, file="theta-certo")
>        open(unit=9, file="energia-certo")
20c20
<          thetz = theta
---
>          
22c22
<          omega = omega - ((g/al)*thetz*dt)
---
>          omega = omega - ((g/al)*theta*dt)
32d31
< 

````

Assim o theta e energia ficam mais plausíveis:

![thetacerto](fotos/thetaAcerto.png)

![energiacerta](fotos/energiaAcerto.png)

## Tarefa B

Agora é considerado o caso mais geral do pêndulo - testando em 4 situações distintas:

### B1

Aqui é considerado $F_0 = \gamma = 0$, uma oscilação livre:

````fortran
      implicit real*8(a-h,o-z)
      g = 9.8d0
      al = 9.8d0
      am = 1.0d0

      dt = 0.04d0
      pi = 4.0d0*datan(1.0d0)

      open(unit=7,file="periodo")

      do i=1,30
        theta = 0.1d0*i
        thetz = theta
        omega = 0.0d0

        t = 0.0d0
        oscilacoes = 0

        do while(oscilacoes.lt.100)
          omegz = omega
          t = t + dt

          omega = omega - (g/al)*dsin(theta)*dt
          theta = theta + omega*dt

          if(omega*omegz.lt.0.0d0)then
            oscilacoes = oscilacoes + 1
          end if
        end do

        t = t/50.d0
        if(abs(theta).ge.2.0d0*pi) then
          write(7,*)t,mod(thetz,2.0d0*pi)
        else
          write(7,*)t,thetz
        end if
      end do

      close(7)
      end
````

E comparamos com o resultado de calcular a integral da fórmula numericamente:

````fortran
      program b1i
      implicit real*8(a-h,o-z)
      g = 9.8d0
      al = 9.8d0
      am = 1.0d0

      dt = 0.04d0
      pi = 4.0d0*datan(1.0d0)

      open(unit=7,file="integral-periodo")
      do i=1,30
        theta = 0.1d0*i
        thetz = theta
        omega = 0.0d0

        t = 0.0d0

        erro = thetz*0.01d0
        h = 1/10000.0d0
        hi = h

        do while(h.le.(thetz-erro))
          valor = b(h-hi,thetz,hi)
          t = t + valor
          h = h + 4*hi
        end do

        t = 2.0d0*dsqrt(2.0d0*al/g)*(t+2.0d0*
     &dsqrt(erro/dsin(thetz)))
        write(7,*)t,thetz
      end do

      close(7)
      end program


      real*8 function f(theta,thetz,h)
        implicit real*8 (a-h,o-z)
        f = 1.0d0/dsqrt(dcos(theta+h)-dcos(thetz))
      end function

      real*8 function b(x,x0,h)
        implicit real*8 (a-h,o-z)
        b = 2.0d0*h/45.0d0*(7.0d0*f(x,x0,0.0d0)+32.0d0*f(x,x0,h*1.0d0)
     &+12.0d0*f(x,x0,h*2.0d0)+32.0d0*f(x,x0,3.0d0*h)+7.0d0*f(x,x
     &0,4.0d0*h))
      end function
````

Fica assim:

![b1](fotos/b1.png)

Nesse caso podemos perceber que ambos os métodos oferecem resultados relatvamente próximos.

### B2
Agora é utilizada uma simplificação para o caso de $\theta$ pequeno, o que nos deixa com um código bastante simples:

````fortran
      implicit real*8(a-h,o-z)
      g = 9.8d0
      al = 9.8d0
      am = 1.0d0
      dt = 0.04d0
      pi = 4.0d0*datan(1.0d0)
      open(unit=7,file="pequeno-periodo")
      do i=1,30
        theta = 0.1d0*i
        write(7,*) (2.0d0*pi*sqrt(al/g)*(1.0d0+((theta**2.0d0)
     &/16.0d0))),theta
      end do
      close(7)
      end
````

Abaixo uma comparação do gráfico obtido por esse código com o da questão B1, é perceptível que a aproximação de fato é boa para $\theta s$ pequenos mas diverge com seu aumento:

![b2](fotos/b2.png)

### B3

Agora o caso amortecido! Utilizando $\gamma = \frac{1}{2}$, o código foi adaptado:

````fortran
       implicit real*8 (a-h, o-z)
       g = 9.8d0
       al = 9.8d0
       am = 1.0d0

       tmax = 80.0d0
       t = 0.0d0
       dt = 0.01d0

       pi = 4.0d0*datan(1.0d0)
       omega = 0.0d0
       theta = pi/6.0d0
       gamma = 0.5d0
       
       open(unit=7, file="theta-certo")

       do while (t.lt.tmax)
         t = t + dt
         theta = theta + (omega * dt)
         omega = omega - (g/al)*theta*dt - gamma*omega*dt

         if(abs(theta).ge.2.0d0*pi) then
           write(7,*) t,mod(theta,2.0d0*pi)
         else
           write(7,*) t,theta
         end if
       end do

       close(7)
       end
````

O gráfico mostra claramente o comportamnento de amortecimento, como esperado:

![b3](fotos/b3.png)

O amortecimento é subcrítico.

### B4

Agora é pedido para considerar $\gamma = 0.5, \Omega=\frac{2}{3}, \Delta t=0.04$ e fazer o gráfico de $\omega e \theta$ para diversos $F_0$. Com o código abaixo, alterando a variável F0, isso é possível:

````fortran
       implicit real*8 (a-h, o-z)
       g = 9.8d0
       al = 9.8d0
       am = 1.0d0

       tmax = 80.0d0
       t = 0.0d0
       dt = 0.04d0

       pi = 4.0d0*datan(1.0d0)
       omega = 0.0d0
       theta = pi/6.0d0
       gamma = 0.5d0
       OMEGAM = 2.0d0/3.0d0  
     
       F0 = 1.2d0
       
       open(unit=7, file="theta-12")
       open(unit=9, file="omega-12")

       do while (t.lt.tmax)
         t = t + dt
         theta = theta + (omega * dt)
         omega = omega - (g/al)*dsin(theta)*dt - gamma*omega*dt + F0
     &*dsin(OMEGAM*t)*dt

         write(9,*) t,omega
         if(abs(theta).ge.2.0d0*pi) then
           write(7,*) t,mod(theta,2.0d0*pi)
         else
           write(7,*) t,theta
         end if
       end do

       close(9)
       close(7)
       end
````

Abaixo os gráficos de $\theta$ e $\omega$, resoectivamente

$F_0=0$:

![t0](fotos/theta0.png)

![o0](fotos/omega0.png)

$F_0=0.5$:

![t05](fotos/theta05.png)

![o05](fotos/omega05.png)

$F_0=1.2$:

![t12](fotos/theta12.png)

![o12](fotos/omega12.png)

No caso 1.2 o movimento não tem mais características periódicas, mas sim caóticas.

## Tarefa C
Agora é pedido para considerar $\gamma = 0.05, \Omega=\frac{2}{3}, \Delta t=0.04$, para  $F_0 = 0.5$  e  $F_0=1.2$e fazer o gráfico de $\omega e \theta$ para diversos $F_0$. Com o código abaixo, alterando a variável F0, isso é possível:

````fortran
       program c
       implicit real*8 (a-h, o-z)
       dimension xsec1(-2:6)
       dimension xsec2(-2:6)
       dimension xsec3(-2:6)
       r1e = -7
       r2e = 2
       r3e = 9
       x0 = -10.0d0
       
       xi1 = x0
       xi2 = 0.0d0
       xi3 = 7.0d0
       open(unit=2, file="saida-1")
       
       write(2,*) ' |      Busca Direta           ',
     & '                                 |        Newton        ',
     & '                                        |       Secante      ',
     & '                                          |'
       
       write(2,*) 'i| r1                 | r2     ',
     & '            | r3                 |   r1               | ',
     & 'r2                 | r3                 | r1                 ',
     & '| r2                 | r3                 |'

       do i=0,6
           	 	
         tmp = buscadireta(x0)
         open(unit=9, file=".bd.tmp")
         read(9,*) bd1, bd2, bd3
         close(9)
         
         xi1 = anr(xi1)
         xi2 = anr(xi2)
         xi3 = anr(xi3)
         
         xsec1(-1) = -7.8691588785d0
         xsec1(-2) = -10.0d0        
         xsec1(i) = sec(xsec1(i-1), xsec1(i-2))
         
         xsec2(-1) = 2.1355932203d0
         xsec2(-2) = 0.0d0 
         xsec2(i) = sec(xsec2(i-1), xsec2(i-2))
         
         xsec3(-1) = 11.3750000000d0
         xsec3(-2) = 7.0d0
         xsec3(i) = sec(xsec3(i-1), xsec3(i-2))
         
         write (2,4) i, bd1, bd2, bd3, xi1, xi2, xi3, xsec1(i),
     &   xsec2(i), xsec3(i)
4        format( i2, 10('|', f20.10), '|')
       end do
       
       write (2,*) "EXT|     -7.0000000000|        2.0000000000|",
     & "        9.0000000000|"
       end program

       real*8 function fx(x)
         implicit real*8 (a-h, o-z)
         fx = (x**3.0d0)-(4.0d0*(x**2.0d0))-(59.0d0*x)+126.0d0
       end function
       
       real*8 function dfx(x)
         implicit real*8 (a-h, o-z)
         dfx = (3.0d0*(x**2.0d0))-(8.0d0*x)-59.0d0
       end function
       
       real*8 function buscadireta(x)
         implicit real*8 (a-h, o-z)
         open(unit=9, file=".bd.tmp")
         x = -10.0d0
         f = -10.0d0
         do while (f.lt.0)
           f = fx(x)
           x = x + 0.1d0    
         end do
         r1 = x - 0.2d0
         f=10.0d0

         do while (f.gt.0)
           f = fx(x)
           x = x + 0.1d0    
         end do
         r2 = x - 0.2d0
         f=-10.0d0

         do while (f.lt.0)
           f = fx(x)
           x = x + 0.1d0    
         end do
         r3 = x - 0.2d0

         write(9,*) r1, r2, r3
         close(9)
        end function
        
        real*8 function anr(x)
          implicit real*8 (a-h, o-z)
          anr = x - (fx(x)/dfx(x))
        end function
        
        real*8 function sec(x,xold)
          implicit real*8 (a-h, o-z)
          sec = x - ( fx(x) * ( (x - xold)/(fx(x)-fx(xold)) ) )
          
        end function
````

Abaixo os resultados:

![c](fotos/c.png)